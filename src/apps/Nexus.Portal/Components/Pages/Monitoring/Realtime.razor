@page "/monitoring/realtime"
@using System.Linq
@using MudBlazor
@using Nexus.Core.Domain.Models.Areas.Interfaces
@using Nexus.Core.Domain.Models.Stockers.Interfaces

@inject IStockerRepository StockerRepository
@inject IAreaRepository AreaRepository

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Realtime Overview</MudText>
    <MudGrid>
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-2">Stocker ST01</MudText>
                <MudGrid>
                    @for (int index = 0; index < StockerPorts.Count; index++)
                    {
                        int i = index; // Local copy for lambda capture
                        <MudItem xs="6" sm="4" md="3">
                            <MudPaper Class="@($"d-flex flex-column align-items-center pa-2 {(StockerPorts[i] ? "mud-theme-success" : "mud-theme-surface")}")" Elevation="2">
                                <MudText Typo="Typo.subtitle2">@($"ST01.CP{(i + 1):00}")</MudText>
                                <MudChip T="string" Color="@(StockerPorts[i] ? Color.Success : Color.Default)" Variant="Variant.Filled" Class="mt-1">
                                    @(StockerPorts[i] ? "Occupied" : "Empty")
                                </MudChip>
                            </MudPaper>
                        </MudItem>
                    }
                </MudGrid>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-2">Area A01</MudText>
                <MudGrid>
                    @for (int index = 0; index < AreaPorts.Count; index++)
                    {
						int i = index; // Local copy for lambda capture
                        <MudItem xs="6" sm="4" md="3">
                            <MudPaper Class="@($"d-flex flex-column align-items-center pa-2 {(AreaPorts[i] ? "mud-theme-success" : "mud-theme-surface")}")" Elevation="2">
                                <MudText Typo="Typo.subtitle2">@($"A01.CP{(i + 1):00}")</MudText>
                                <MudChip T="string" Color="@(AreaPorts[i] ? Color.Success : Color.Default)" Variant="Variant.Filled" Class="mt-1">
                                    @(AreaPorts[i] ? "Occupied" : "Empty")
                                </MudChip>
                            </MudPaper>
                        </MudItem>
                    }
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
  

    // 선언과 동시에 초기화하여 코드를 간결하게 만듭니다.
    private List<bool> StockerPorts { get; set; } = Enumerable.Repeat(false, 8).ToList();
    private List<bool> AreaPorts { get; set; } = Enumerable.Repeat(false, 6).ToList();

    protected override async Task OnInitializedAsync()
    {
        // Stocker 정보 가져오기
        var stockers = await StockerRepository.GetAllAsync();
        // Area 정보 가져오기
        var areas = await AreaRepository.GetAllAsync();
      
    }
}