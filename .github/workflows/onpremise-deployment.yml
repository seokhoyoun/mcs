name: Build and Deploy to On-Premise

on:
  push:
    branches: [ "main" ]

env:
  # ⚠️ ghcr.io를 사용하므로 온프레미스 서버는 인터넷에 연결되어 있어야 합니다.
  REGISTRY: ghcr.io 
  OWNER: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 디버깅용 스텝 추가 ---
      - name: List files in the repository
        run: ls -R
      # --------------------------

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Nexus.Gateway image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: src/apps/Nexus.Gateway/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-gateway:latest

      - name: Build and push Nexus.Orchestrator image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: src/apps/Nexus.Orchestrator/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-orchestrator:latest

      - name: Build and push Nexus.Portal image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: src/apps/Nexus.Portal/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-portal:latest

  # ===============================================================
  # deploy 작업을 온프레미스 서버에서 실행하도록 수정합니다.
  # ===============================================================
  deploy:
    # ❗ 이 작업을 self-hosted 러너에서 실행하도록 지정합니다.
    runs-on: self-hosted 
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ❗ GHCR에 로그인해야 이미지를 pull 받을 수 있습니다.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_FOR_ONPREM_RUNNER }} 

      # ❗ Azure 액션 대신 docker compose 명령어를 직접 실행합니다.
      - name: Pull latest images and restart services
        run: |
          echo "Pulling latest images from GHCR..."
          docker compose pull
          
          echo "Starting services with new images..."
          docker compose up -d --remove-orphans